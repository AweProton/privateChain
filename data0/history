eth.accounts()
eth.accounts
miner.start(1)
minerminer.stop()
miner.stop()
eth.getBalance(eth.accounts[0])
amount = web3.toWei(5,'ether')
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:amount})
txpool.status
miner.start(1);admin.sleepBlocks(1);miner.stop();
web3.fromWei(eth.getBalance(eth.accounts[1]),'ether')
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
eth.blockNumber
solc --bin testContract.sol
eth.getCompilers()
web3.eth.getCompilers();
solc --bin testContract.sol
solc --bin token.sol
code = "0x6060604052341561000f57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103d78061005e6000396000f300606060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063867904b41461005c578063a9059cbb1461009e578063f8b2cb4f146100e0575b600080fd5b341561006757600080fd5b61009c600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061012d565b005b34156100a957600080fd5b6100de600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919080359060200190919050506101d9565b005b34156100eb57600080fd5b610117600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610362565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561018857600080fd5b80600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561022557600080fd5b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254039250508190555080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef338383604051808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a15050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490509190505600a165627a7a723058200ffb4d1a6795f0b407fa5c737231bd8d25e5fce2333664f78911c8a68dc5f30b0029"
abi = [{"constant":false,"inputs":[{"name":"account","type":"address"},{"name":"amount","type":"uint256"}],"name":"issue","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"to","type":"address"},{"name":"amount","type":"uint256"}],"name":"transfer","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"account","type":"address"}],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"name":"account","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Issue","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"from","type":"address"},{"indexed":false,"name":"to","type":"address"},{"indexed":false,"name":"amount","type":"uint256"}],"name":"Transfer","type":"event"}]
eth.compile
geth --solc /usr/local/bin/solc
var contract = eth.contract(abi)
var initializer = {from: web3.eth.accounts[0], data: code, gas: 300000};
var token = contract.new(initializer)
myContract = eth.contract(abi)
newContract = myContract.new({from: eth.accounts[0], data: code, gas:1000000})
txpool.status
miner.start(1)
miner.stop()
token = newContract
token.issue.sendTransaction(eth.accounts[0],100,{from: eth.accounts[0]});
miner.start(1)
miner.stop()
token.transfer(eth.accounts[1],30,{from: eth.accounts[0]})
miner.start(1)
miner.stop()
token.getBalance()
token.getBalance(eth.accounts[1])
token.getBalance(eth.accounts[0])
txpool.status
eth.getBalance(eth.accounts[0])
token.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
miner.start(1)
eth.getBalance(eth.accounts[0])
miner.stop()
txpool.status
token
eth.sendTransaction({from: eth.accounts[0], to:eth.accounts[1],value: web3.toWei(10,'ether')})
txpool.status
eth.getBlock("pending",true).transactions
miner.start(1)
miner.stop()
txpool.status
web3.fromWei(eth.getBalance(eth.accounts[1]),'ether')
eth.blockNumber